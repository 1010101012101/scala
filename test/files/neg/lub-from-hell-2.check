lub-from-hell-2.scala:4: error: kinds of the type arguments (Any,Seq with scala.collection.StrictOptimizedSeqOps[Any,Seq with scala.collection.StrictOptimizedSeqOps[Any,Seq with Serializable,Serializable with Equals] with Serializable,Seq[Any] with scala.collection.StrictOptimizedSeqOps[Any,Seq with Serializable,Serializable with Equals] with Serializable] with Serializable,Seq[Any] with scala.collection.StrictOptimizedSeqOps[Any,Seq with scala.collection.StrictOptimizedSeqOps[Any,Seq with Serializable,Serializable with Equals] with Serializable,Seq[Any] with scala.collection.StrictOptimizedSeqOps[Any,Seq with Serializable,Seq[Any] with Serializable] with Serializable] with Serializable) do not conform to the expected kinds of the type parameters (type A,type CC,type C) in trait StrictOptimizedSeqOps.
Seq with scala.collection.StrictOptimizedSeqOps[Any,Seq with scala.collection.StrictOptimizedSeqOps[Any,Seq with Serializable,Serializable with Equals] with Serializable,Seq[Any] with scala.collection.StrictOptimizedSeqOps[Any,Seq with Serializable,Serializable with Equals] with Serializable] with Serializable's type parameters do not match type CC's expected parameters:
<refinement of Int => A with scala.collection.StrictOptimizedSeqOps[Any,Seq with scala.collection.StrictOptimizedSeqOps[Any,Seq with Serializable,Serializable with Equals] with Serializable,Seq[Any] with scala.collection.StrictOptimizedSeqOps[Any,Seq with Serializable,Serializable with Equals] with Serializable]> has no type parameters, but type CC has one
  def foo(a: Boolean, b: List[Any], c: collection.mutable.ListBuffer[Any]) = if (a) b else c
      ^
one error found
